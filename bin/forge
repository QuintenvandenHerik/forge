#!/usr/bin/env php
<?php
declare(strict_types=1);

// Try common locations for Composer's autoloader
$autoloadCandidates = [
    __DIR__ . '/../../../autoload.php', // installed as dependency: vendor/your-vendor/forge/bin -> vendor/autoload.php
    __DIR__ . '/../vendor/autoload.php', // running from the package repo (bin/ -> vendor/autoload.php)
];

$autoloader = null;
foreach ($autoloadCandidates as $path) {
    if (is_file($path)) {
        $autoloader = require $path;
        break;
    }
}

if (!$autoloader) {
    fwrite(STDERR, "Could not find Composer autoload.php. Run `composer install`.\n");
    exit(1);
}

use Forge\ApplicationFactory;

// prefer the *project* working dir as base, not the package dir
$basePath = getcwd();

// load config from the project, if present
$config = [];
$cfgFile = $basePath . '/config/app.php';
if (is_file($cfgFile)) {
    $loaded = require $cfgFile;
    if (is_array($loaded)) $config = $loaded;
}

if (!class_exists(\Forge\ApplicationFactory::class)) {
    fwrite(STDERR, "Class Forge\\ApplicationFactory not found. Check your composer.json autoload (PSR-4) and run `composer dump-autoload`.\n");
    exit(1);
}

$app = ApplicationFactory::make($basePath, $config);
$app->run();
